@model TorrentViewModel
@{
    ViewData["Title"] = $"Torrent #{Model.Id}";
}

@{
    var usrId = this.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
    async Task DisplayComments(string parentId)
    {
        var comments = Model.Comments.Where(x => x.ParentId == parentId);

        if (!Model.Comments.Any() || !comments.Any())
        {
            return;
        }

        @foreach (var comment in comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="ml-3 mt-3 mr-3">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="@comment.UserImageUrl" class="d-block ui-w-50 rounded-circle img-sm" alt="User Profile pic">
                                    <div class="media-body ml-3">
                                        @comment.UserUserName
                                        <div class="text-muted small">
                                            @*<time datetime="@comment.CreatedOn.ToString("O")"></time>*@
                                            <time>@comment.CreatedOn</time>
                                        </div>
                                    </div>

                                    @if (!comment.IsDeleted)
                                    {
                                        <div class="text-muted small ml-3">
                                            @if (usrId != null && usrId == comment.UserId)
                                            {
                                                <div>
                                                    <form asp-controller="Comment" asp-action="Delete" method="post" onSubmit="return confirm('Are you sure you wish to delete your comment ?');">
                                                        <input type="hidden" name="CommentId" value="@comment.Id" />
                                                        <input type="hidden" name="TorrentId" value="@Model.Id" />
                                                        <input type="submit" class="btn btn-danger" value="Delete">
                                                    </form>
                                                </div>
                                            }
                                        </div>
                                        <div class="text-muted small ml-3">
                                            @if (this.User.Identity.IsAuthenticated)
                                            {
                                                <div> <button type="button" class="btn btn-secondary" onclick="showAddCommentForm('@comment.Id')">Answer</button> </div>
                                            }
                                        </div>
                                    }

                                </div>
                                <hr />

                            </div>
                            <div class="card-body">
                                <article class="mb-3">
                                    @if (comment.IsDeleted)
                                    {
                                        <span class="text-danger">This comment is deleted</span>
                                    }
                                    else
                                    {
                                        @comment.Content

                                    }
                                </article>
                                @{
                                    await DisplayComments(comment.Id);
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

<div id="main-content" class="blog-page">
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-8 col-md-12 left-box">
                <div class="card single_post">
                    <div class="body">
                        <div>
                            <form id="torrentsForm" asp-controller="Torrent" asp-action="Download">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <h3 class="text-center">Link: <input type="submit" class="torrent-download-link underline" value="@Model.Title"></h3>
                            </form>

                        </div>
                        <div class="img-post">
                            <img class="d-block img-fluid ml-auto mr-auto" src="@Model.ImageUrl" alt="Torrent Image">
                        </div>
                        <section>
                            <h3>Description</h3>
                            <article>
                                @Model.Description
                            </article>
                        </section>
                        <hr />
                        <section class="mb-2">
                            <h3>Torrent info</h3>
                            <article>
                                Uploader: <a asp-controller="Users" asp-action="ById" asp-route-id="@Model.Uploader.Id">@Model.Uploader.UserName</a>
                            </article>
                            <article>
                                Uploaded on: @Model.CreatedOn
                            </article>
                            <article>
                                Torrent size: @Model.Size.ToString("F2") GBs
                            </article>
                            <article>
                                Downloaded times: @Model.DownloadersCount
                            </article>
                        </section>
                        @if ((usrId != null && usrId != @Model.Uploader.Id) && !@Model.FavouritedByUsersId.Contains(usrId))
                        {
                            <button id="favouriteButton" class="btn btn-info" onclick="favourite(@Model.Id)"> <i id="heartEmoji" class="far fa-heart"></i>
Favourite </button>
                        }
                        else if ((usrId != null && usrId != @Model.Uploader.Id) && @Model.FavouritedByUsersId.Contains(usrId))
                        {
                            <button id="favouriteButton" class="btn btn-info" onclick="favourite(@Model.Id)"> <i id="heartEmoji" class="fas fa-heart"></i>Unfavourite </button>
                        }

                        @if ((usrId != null && usrId == @Model.Uploader.Id) || User.IsInRole(Constants.AdministratorRoleName))
                        {
                            <button type="button" class="btn btn-warning" data-toggle="ajax-modal" data-target="#editTorrent" data-url="@Url.Action("Edit", new {id = @Model.Id})">Edit</button>
                        }
                        @if (User.IsInRole(Constants.AdministratorRoleName))
                        {
                            <div class="mt-2">
                                @if (Model.IsApproved)
                                {
                                    <button id="approveButton" class="btn btn-danger" onclick="approve(@Model.Id)"> Disapprove </button>
                                }
                                else
                                {
                                    <button id="approveButton" class="btn btn-danger" onclick="approve(@Model.Id)"> Approve </button>
                                }
                            </div>
                        }
                    </div>
                </div>
                <div class=".bg-light">
                    <div class="card">
                        <div class="header">
                            <h3>Leave a comment</h3>
                        </div>
                        <div class="body">
                            <div class="comment-form">
                                <form class="row clearfix" id="AddCommentForm" asp-controller="Comment" asp-action="Create" method="post">
                                    <input type="hidden" name="TorrentId" value="@this.Model.Id" />
                                    <input type="hidden" name="ParentId" value="" />
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <textarea rows="4" name="Content" class="form-control no-resize" required placeholder="Tell us what do you think..."></textarea>
                                        </div>
                                        <button type="submit" class="btn btn-block btn-primary">Comment</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-lg-4 col-md-12 right-box">
                <div class="card">
                    <div class="header">
                        <h2>Categories Clouds</h2>
                    </div>
                    <div class="body widget">
                        <ul class="list-unstyled categories-clouds m-b-0">
                            <li><a href="javascript:void(0);">eCommerce</a></li>
                            <li><a href="javascript:void(0);">Microsoft Technologies</a></li>
                            <li><a href="javascript:void(0);">Creative UX</a></li>
                            <li><a href="javascript:void(0);">Wordpress</a></li>
                            <li><a href="javascript:void(0);">Angular JS</a></li>
                            <li><a href="javascript:void(0);">Enterprise Mobility</a></li>
                            <li><a href="javascript:void(0);">Website Design</a></li>
                            <li><a href="javascript:void(0);">HTML5</a></li>
                            <li><a href="javascript:void(0);">Infographics</a></li>
                            <li><a href="javascript:void(0);">Wordpress Development</a></li>
                        </ul>
                    </div>
                </div>
                <div class="card">
                    <div class="header">
                        <h2>Popular Posts</h2>
                    </div>
                    <div class="body widget popular-post">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-lg-8 col-md-12 left-box">
    @{
        await DisplayComments(null);
    }
</div>

@section Scripts
{
<partial name="_ValidationScriptsPartial" />

<script>

        function showAddCommentForm(parentId) {
            $("#AddCommentForm input[name='ParentId']").val(String(parentId));
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }

        function approve(torrentId, condition) {
            var token = $("#torrentsForm input[name=__RequestVerificationToken]").val();
            var json = { torrentId: torrentId };
            var isApproved = $("#approveButton").text();
            console.log(isApproved);
            $.ajax({
                url: "/api/changeApproval",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    if (isApproved == "Approve") {
                        $("#approveButton").text("Disapprove");
                    }
                    else {
                        $("#approveButton").text("Approve");
                    }
                }
            });
        }

        $(function() {
        var placeholderElement = $('#PlaceHolderHere');
        $('button[data-toggle="ajax-modal"]').click(function (event) {
            var url = $(this).data('url');
            $.get(url).done(function (data) {
                placeholderElement.html(data);
                placeholderElement.find('.modal').modal('show');
            })
        })


            placeholderElement.on('click', '[data-save="modal"]', function (event) {

            var form = $(this).parents('.modal').find('form');
            var actionUrl = form.attr('action');
            var sendData = form.serialize();

            if(confirm('Are you sure you wish to edit that torrent? After consent you will have to wait to be approved by administrator!'))
            {
            $.post(actionUrl, sendData).done(function (data) {

                alert("After the changes your torrent is waiting for approval !");

                placeholderElement.find('.modal').modal('hide');

                var origin = window.location.origin;

                if (@($"{this.User.IsInRole(Constants.AdministratorRoleName)}".ToLower()) == true)
                {
                    console.log("admin4e")

                    window.location.replace(origin + "/Administration/Torrents/All");
                }
                else{
                    window.location.replace(origin + "/t");
                }
            })
             }
        else{
            placeholderElement.find('.modal').modal('hide');
        }
        })


    })

    $("#favouriteButton").hover(
  	() => { //hover
          if($("#favouriteButton").text().toString().indexOf("Unfavourite") >= 0){
              $("#heartEmoji").removeClass("fas fa-heart");
              $("#heartEmoji").addClass("far fa-heart");
          }
          else{
              $("#heartEmoji").removeClass("far fa-heart");
              $("#heartEmoji").addClass("fas fa-heart");
          }}, 
  	() => { //out
    	  if($("#favouriteButton").text().toString().indexOf("Unfavourite") >= 0){
              $("#heartEmoji").removeClass("far fa-heart");
              $("#heartEmoji").addClass("fas fa-heart");
          }
          else{
              $("#heartEmoji").removeClass("fas fa-heart");
              $("#heartEmoji").addClass("far fa-heart");
          }});

</script>
}
